#[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord)]
#[repr(C)]
pub enum BlendMode {
    Clear = 0,
    Src = 1,
    Dst = 2,
    SrcOver = 3,
    DstOver = 4,
    SrcIn = 5,
    DstIn = 6,
    SrcOut = 7,
    DstOut = 8,
    SrcATop = 9,
    DstATop = 10,
    Xor = 11,
    Plus = 12,
    Modulate = 13,
    Screen = 14,
    Overlay = 15,
    Darken = 16,
    Lighten = 17,
    ColorDodge = 18,
    ColorBurn = 19,
    HardLight = 20,
    SoftLight = 21,
    Difference = 22,
    Exclusion = 23,
    Multiply = 24,
    Hue = 25,
    Saturation = 26,
    Color = 27,
    Luminosity = 28,
}

impl From<i64> for BlendMode {
    fn from(value: i64) -> Self {
        match value {
            1 => Self::Src,
            2 => Self::Dst,
            3 => Self::SrcOver,
            4 => Self::DstOver,
            5 => Self::SrcIn,
            6 => Self::DstIn,
            7 => Self::SrcOut,
            8 => Self::DstOut,
            9 => Self::SrcATop,
            10 => Self::DstATop,
            11 => Self::Xor,
            12 => Self::Plus,
            13 => Self::Modulate,
            14 => Self::Screen,
            15 => Self::Overlay,
            16 => Self::Darken,
            17 => Self::Lighten,
            18 => Self::ColorDodge,
            19 => Self::ColorBurn,
            20 => Self::HardLight,
            21 => Self::SoftLight,
            22 => Self::Difference,
            23 => Self::Exclusion,
            24 => Self::Multiply,
            25 => Self::Hue,
            26 => Self::Saturation,
            27 => Self::Color,
            28 => Self::Luminosity,
            _ => Self::Clear,
        }
    }
}
